"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const get_set_1 = require("../moment/get-set");
const format_1 = require("../format/format");
const aliases_1 = require("./aliases");
const priorities_1 = require("./priorities");
const regex_1 = require("../parse/regex");
const token_1 = require("../parse/token");
const hooks_1 = require("../utils/hooks");
const constants_1 = require("./constants");
const to_int_1 = require("../utils/to-int");
// FORMATTING
format_1.addFormatToken('Y', 0, 0, function () {
    var y = this.year();
    return y <= 9999 ? '' + y : '+' + y;
});
format_1.addFormatToken(0, ['YY', 2], 0, function () {
    return this.year() % 100;
});
format_1.addFormatToken(0, ['YYYY', 4], 0, 'year');
format_1.addFormatToken(0, ['YYYYY', 5], 0, 'year');
format_1.addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');
// ALIASES
aliases_1.addUnitAlias('year', 'y');
// PRIORITIES
priorities_1.addUnitPriority('year', 1);
// PARSING
regex_1.addRegexToken('Y', regex_1.matchSigned);
regex_1.addRegexToken('YY', regex_1.match1to2, regex_1.match2);
regex_1.addRegexToken('YYYY', regex_1.match1to4, regex_1.match4);
regex_1.addRegexToken('YYYYY', regex_1.match1to6, regex_1.match6);
regex_1.addRegexToken('YYYYYY', regex_1.match1to6, regex_1.match6);
token_1.addParseToken(['YYYYY', 'YYYYYY'], constants_1.YEAR);
token_1.addParseToken('YYYY', function (input, array) {
    array[constants_1.YEAR] = input.length === 2 ? hooks_1.hooks.parseTwoDigitYear(input) : to_int_1.default(input);
});
token_1.addParseToken('YY', function (input, array) {
    array[constants_1.YEAR] = hooks_1.hooks.parseTwoDigitYear(input);
});
token_1.addParseToken('Y', function (input, array) {
    array[constants_1.YEAR] = parseInt(input, 10);
});
// HELPERS
function daysInYear(year) {
    return isLeapYear(year) ? 366 : 365;
}
exports.daysInYear = daysInYear;
function isLeapYear(year) {
    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
}
exports.isLeapYear = isLeapYear;
// HOOKS
hooks_1.hooks.parseTwoDigitYear = function (input) {
    return to_int_1.default(input) + (to_int_1.default(input) > 68 ? 1900 : 2000);
};
// MOMENTS
exports.getSetYear = get_set_1.makeGetSet('FullYear', true);
function getIsLeapYear() {
    return isLeapYear(this.year());
}
exports.getIsLeapYear = getIsLeapYear;
//# sourceMappingURL=year.js.map