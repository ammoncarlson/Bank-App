"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const extend_1 = require("./extend");
const hooks_1 = require("./hooks");
function warn(msg) {
    if (hooks_1.hooks.suppressDeprecationWarnings === false &&
        (typeof console !== 'undefined') && console.warn) {
        console.warn('Deprecation warning: ' + msg);
    }
}
function deprecate(msg, fn) {
    var firstTime = true;
    return extend_1.default(function () {
        if (hooks_1.hooks.deprecationHandler != null) {
            hooks_1.hooks.deprecationHandler(null, msg);
        }
        if (firstTime) {
            var args = [];
            var arg;
            for (var i = 0; i < arguments.length; i++) {
                arg = '';
                if (typeof arguments[i] === 'object') {
                    arg += '\n[' + i + '] ';
                    for (var key in arguments[0]) {
                        arg += key + ': ' + arguments[0][key] + ', ';
                    }
                    arg = arg.slice(0, -2); // Remove trailing comma and space
                }
                else {
                    arg = arguments[i];
                }
                args.push(arg);
            }
            warn(msg + '\nArguments: ' + Array.prototype.slice.call(args).join('') + '\n' + (new Error()).stack);
            firstTime = false;
        }
        return fn.apply(this, arguments);
    }, fn);
}
exports.deprecate = deprecate;
var deprecations = {};
function deprecateSimple(name, msg) {
    if (hooks_1.hooks.deprecationHandler != null) {
        hooks_1.hooks.deprecationHandler(name, msg);
    }
    if (!deprecations[name]) {
        warn(msg);
        deprecations[name] = true;
    }
}
exports.deprecateSimple = deprecateSimple;
hooks_1.hooks.suppressDeprecationWarnings = false;
hooks_1.hooks.deprecationHandler = null;
//# sourceMappingURL=deprecate.js.map