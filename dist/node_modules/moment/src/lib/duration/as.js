"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const bubble_1 = require("./bubble");
const aliases_1 = require("../units/aliases");
const to_int_1 = require("../utils/to-int");
function as(units) {
    if (!this.isValid()) {
        return NaN;
    }
    var days;
    var months;
    var milliseconds = this._milliseconds;
    units = aliases_1.normalizeUnits(units);
    if (units === 'month' || units === 'year') {
        days = this._days + milliseconds / 864e5;
        months = this._months + bubble_1.daysToMonths(days);
        return units === 'month' ? months : months / 12;
    }
    else {
        // handle milliseconds separately because of floating point math errors (issue #1867)
        days = this._days + Math.round(bubble_1.monthsToDays(this._months));
        switch (units) {
            case 'week': return days / 7 + milliseconds / 6048e5;
            case 'day': return days + milliseconds / 864e5;
            case 'hour': return days * 24 + milliseconds / 36e5;
            case 'minute': return days * 1440 + milliseconds / 6e4;
            case 'second': return days * 86400 + milliseconds / 1000;
            // Math.floor prevents floating point math errors here
            case 'millisecond': return Math.floor(days * 864e5) + milliseconds;
            default: throw new Error('Unknown unit ' + units);
        }
    }
}
exports.as = as;
// TODO: Use this.as('ms')?
function valueOf() {
    if (!this.isValid()) {
        return NaN;
    }
    return (this._milliseconds +
        this._days * 864e5 +
        (this._months % 12) * 2592e6 +
        to_int_1.default(this._months / 12) * 31536e6);
}
exports.valueOf = valueOf;
function makeAs(alias) {
    return function () {
        return this.as(alias);
    };
}
exports.asMilliseconds = makeAs('ms');
exports.asSeconds = makeAs('s');
exports.asMinutes = makeAs('m');
exports.asHours = makeAs('h');
exports.asDays = makeAs('d');
exports.asWeeks = makeAs('w');
exports.asMonths = makeAs('M');
exports.asYears = makeAs('y');
//# sourceMappingURL=as.js.map