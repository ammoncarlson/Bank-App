"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const is_number_1 = require("../utils/is-number");
const locales_1 = require("./locales");
const utc_1 = require("../create/utc");
function get(format, index, field, setter) {
    var locale = locales_1.getLocale();
    var utc = utc_1.createUTC().set(setter, index);
    return locale[field](utc, format);
}
function listMonthsImpl(format, index, field) {
    if (is_number_1.default(format)) {
        index = format;
        format = undefined;
    }
    format = format || '';
    if (index != null) {
        return get(format, index, field, 'month');
    }
    var i;
    var out = [];
    for (i = 0; i < 12; i++) {
        out[i] = get(format, i, field, 'month');
    }
    return out;
}
// ()
// (5)
// (fmt, 5)
// (fmt)
// (true)
// (true, 5)
// (true, fmt, 5)
// (true, fmt)
function listWeekdaysImpl(localeSorted, format, index, field) {
    if (typeof localeSorted === 'boolean') {
        if (is_number_1.default(format)) {
            index = format;
            format = undefined;
        }
        format = format || '';
    }
    else {
        format = localeSorted;
        index = format;
        localeSorted = false;
        if (is_number_1.default(format)) {
            index = format;
            format = undefined;
        }
        format = format || '';
    }
    var locale = locales_1.getLocale(), shift = localeSorted ? locale._week.dow : 0;
    if (index != null) {
        return get(format, (index + shift) % 7, field, 'day');
    }
    var i;
    var out = [];
    for (i = 0; i < 7; i++) {
        out[i] = get(format, (i + shift) % 7, field, 'day');
    }
    return out;
}
function listMonths(format, index) {
    return listMonthsImpl(format, index, 'months');
}
exports.listMonths = listMonths;
function listMonthsShort(format, index) {
    return listMonthsImpl(format, index, 'monthsShort');
}
exports.listMonthsShort = listMonthsShort;
function listWeekdays(localeSorted, format, index) {
    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
}
exports.listWeekdays = listWeekdays;
function listWeekdaysShort(localeSorted, format, index) {
    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
}
exports.listWeekdaysShort = listWeekdaysShort;
function listWeekdaysMin(localeSorted, format, index) {
    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
}
exports.listWeekdaysMin = listWeekdaysMin;
//# sourceMappingURL=lists.js.map