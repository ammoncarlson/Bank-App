"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const locales_1 = require("../locale/locales");
const deprecate_1 = require("../utils/deprecate");
// If passed a locale key, it will set the locale for this
// instance.  Otherwise, it will return the locale configuration
// variables for this instance.
function locale(key) {
    var newLocaleData;
    if (key === undefined) {
        return this._locale._abbr;
    }
    else {
        newLocaleData = locales_1.getLocale(key);
        if (newLocaleData != null) {
            this._locale = newLocaleData;
        }
        return this;
    }
}
exports.locale = locale;
exports.lang = deprecate_1.deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {
    if (key === undefined) {
        return this.localeData();
    }
    else {
        return this.locale(key);
    }
});
function localeData() {
    return this._locale;
}
exports.localeData = localeData;
//# sourceMappingURL=locale.js.map