"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const local_1 = require("../create/local");
const offset_1 = require("../units/offset");
const is_function_1 = require("../utils/is-function");
const hooks_1 = require("../utils/hooks");
function getCalendarFormat(myMoment, now) {
    var diff = myMoment.diff(now, 'days', true);
    return diff < -6 ? 'sameElse' :
        diff < -1 ? 'lastWeek' :
            diff < 0 ? 'lastDay' :
                diff < 1 ? 'sameDay' :
                    diff < 2 ? 'nextDay' :
                        diff < 7 ? 'nextWeek' : 'sameElse';
}
exports.getCalendarFormat = getCalendarFormat;
function calendar(time, formats) {
    // We want to compare the start of today, vs this.
    // Getting start-of-today depends on whether we're local/utc/offset or not.
    var now = time || local_1.createLocal(), sod = offset_1.cloneWithOffset(now, this).startOf('day'), format = hooks_1.hooks.calendarFormat(this, sod) || 'sameElse';
    var output = formats && (is_function_1.default(formats[format]) ? formats[format].call(this, now) : formats[format]);
    return this.format(output || this.localeData().calendar(format, this, local_1.createLocal(now)));
}
exports.calendar = calendar;
//# sourceMappingURL=calendar.js.map